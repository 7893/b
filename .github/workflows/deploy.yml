name: Build and Deploy Hugo Site

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  HUGO_VERSION: "0.146.0"

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive
        fetch-depth: 0

    - name: Setup Hugo
      uses: peaceiris/actions-hugo@v3
      with:
        hugo-version: ${{ env.HUGO_VERSION }}
        extended: true

    - name: Build site
      run: |
        hugo --minify --logLevel info
        echo "Build completed successfully"

    - name: Upload Artifacts
      uses: actions/upload-pages-artifact@v3
      with:
        path: public

  deploy-gh-pages:
    needs: build
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

  deploy-cloudflare-worker:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install Wrangler
      run: npm install -g wrangler

    - name: Deploy to R2 Bucket
      run: |
        # Configure Wrangler
        echo "CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}" >> .env
        echo "CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}" >> .env
        
        # Deploy static files to R2 bucket
        wrangler r2 object put blog-b/index.html --file public/index.html --content-type=text/html || true
        find public -type f | while read file; do
          rel_path="${file#public/}"
          if [[ "$rel_path" == *.html ]]; then
            content_type="text/html"
          elif [[ "$rel_path" == *.css ]]; then
            content_type="text/css"
          elif [[ "$rel_path" == *.js ]]; then
            content_type="application/javascript"
          elif [[ "$rel_path" == *.png ]]; then
            content_type="image/png"
          elif [[ "$rel_path" == *.jpg ]] || [[ "$rel_path" == *.jpeg ]]; then
            content_type="image/jpeg"
          else
            content_type="application/octet-stream"
          fi
          wrangler r2 object put "blog-b/$rel_path" --file "$file" --content-type="$content_type" || true
        done
      env:
        CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}